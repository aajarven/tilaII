1)	Ohjelma:
	  1 program ex1p1
	  2       implicit none
	  3       real :: nolla = 0.0
	  4       real :: inf
	  5 
	  6       inf = 1/nolla
	  7 
	  8       write(*,*) "inf: ", inf
	  9       write(*,*) "(+Infinity)*(-Infinity): ", inf*(-1*inf)
	 10       write(*,*) "(-Infinity)*(-Infinity): ", (-1*inf)*(-1*inf)
	 11 
	 12 end program

	Output:
	  inf:          Infinity
	 (+Infinity)*(-Infinity):         -Infinity
	 (-Infinity)*(-Infinity):          Infinity

	Tulosteesta nähdään äärettömyyksien noudattavan tavallisia kertolaskun merkkisääntöjä.


2)	Ohjelma:
	  1 program ex3p2
	  2         implicit none
	  3         real :: nolla = 0.0
	  4         real :: negatiivinen = -1.0
	  5         real :: nan1, nan2
	  6         nan1 = nolla/nolla
	  7         nan2 = sqrt(negatiivinen)
	  8 
	  9         write(*,*) "nan1: ", nan1
	 10         write(*,*) "nan2: ", nan2
	 11 
	 12         if (nan1.NE.nan1) then
	 13                 write(*,*) "nan1!=nan1"
	 14         end if
	 15 
	 16         if (nan2.NE.nan2) then
	 17                 write(*,*) "nan2!=nan2"
	 18         end if
	 19 end program


	Output:
	 nan1:               NaN
	 nan2:               NaN
	 nan1!=nan1
	 nan2!=nan2

	Outputista nähdään, että sekä 0/0 että sqrt(-1) tuottavat NaN ja kumpikin näistä naneista on erisuuri itsensä kanssa.


3)	Ohjelma:
	  1 program ex3p3
	  2         implicit none
	  3         integer, dimension(2,2,2,2,2,2,2) :: array7d
	  4         
	  5         write(*,*) "shape: ", shape(array7d)
	  6         write(*,*) "size: ", size(array7d)
	  7 end program

	Output:
	 shape:            2           2           2           2           2           2           2
	 size:          128


4)	Ohjelma:
	  1 program ex3p4
	  2         implicit none
	  3         integer, dimension(2,2) :: array
	  4         integer :: i, j
	  5 
	  6         do i = 1,2
	  7                 do j = 1,2
	  8                         read(*, *) array(j, i)
	  9                 end do
	 10         end do
	 11 
	 12         array = array**2
	 13        
	 14         write(*,*) array
	 15 
	 16 end program

	Output kun annetaan luvut 1, 2, 3 ja 4:
	           1           4           9          16


5)	Ohjelma:
	  1 program ex3p5
	  2         implicit none
	  3         integer, dimension(4) :: a
	  4         integer, dimension(3,3) :: b
	  5         integer, dimension(4,4) :: c
	  6         integer :: i,j
	  7 
	  8         ! alustetaan jokainen taulukko sisältämään riveittäin luvut 1, 2, 3, ...
	  9         do i=1,4
	 10                 a(i)=i
	 11         end do
	 12 
	 13         do i=1,3
	 14                 do j=1,3
	 15                         b(i, j) = (i-1)*3+j
	 16                 end do
	 17         end do
	 18 
	 19         do i=1,4
	 20                 do j=1,4
	 21                         c(i,j) = (i-1)*4+j
	 22                 end do
	 23         end do
	 24 
	 25         write(*,*) "a slice:"
	 26         write(*,*) a(3:4)
	 27         write(*,*)
	 28         write(*,*) "b slice:"
	 29         write(*,*) b(1:3:2,1:3:2)
	 30         write(*,*)
	 31         write(*,*) "c slice:"
	 32         write(*,*) c(2:3, 2:3)
	 33 
	 34 end program

	Output:
	 a slice:
		   3           4

	 b slice:
		   1           7           3           9

	 c slice:
		   6          10           7          11


6)	Ohjelma:
	  1 program table1
	  2   implicit none
	  3   integer,parameter :: n=4
	  4   integer :: i,j,b(n),c(n,n),d(n,n)
	  5 
	  6   ! ---------- Do not change these loops 
	  7   do i=1,n
	  8      b(i)=i
	  9      do j=1,n
	 10         c(j,i)=10*i+j
	 11      end do
	 12   end do
	 13   ! ----------
	 14   
	 15   d=c+1
	 16   c(2:n,2:n) = d(1:n-1, 1:n-1)
	 17   c(1:n:2,1:n:2)=10*c(1:n:2,1:n:2)
	 18   
	 19   ! print statement is a shorter way to write to stdout
	 20   ! print *,var1,var2,...  == write(6,*) var1,var2,...
	 21   ! Intrinsic function sum() gives the sum of all array elements.
	 22   print *, 'answer=',sum(c)
	 23 
	 24 end program table1

	Output:
	 answer=        1052

	Output on sama kuin alkuperäisellä ohjelmalla.
