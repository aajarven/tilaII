1)	Ohjelma:
	  1 program ex4p1
	  2         implicit none
	  3         integer, dimension(10,10) :: shakkilauta = 0
	  4         integer :: i, j
	  5 
	  6         do i=1,10
	  7                 shakkilauta(i,MOD(i+1,2):10:2) = 1
	  8         end do
	  9 
	 10         do i=1,10
	 11                 do j=1,10
	 12                         write(*,"(I1)", advance='no') shakkilauta(i,j)
	 13                 end do
	 14                 write(*,*) ""
	 15         end do
	 16 end program

	Output:
	0101010101 
	1010101010 
	0101010101 
	1010101010 
	0101010101 
	1010101010 
	0101010101 
	1010101010 
	0101010101 
	1010101010


2)	Ohjelma:
	  1 program ex4p1
	  2         implicit none
	  3         integer, dimension(3,4) :: array
	  4         integer :: i, j
	  5         array = reshape([ 1, 5, -2, 2, 6, -2, 3, 7, -2, 4, 8, -2], shape(array))
	  6 
	  7         do i=1,3
	  8                 do j=1,4
	  9                         write(*, "(I4)", advance='no') array(i,j)
	 10                 end do
	 11                 write(*,*) ''
	 12         end do
	 13 
	 14 
	 15 end program

	Output:
	   1   2   3   4 
	   5   6   7   8 
	  -2  -2  -2  -2


3)	Ohjelma:
	  1 program ex4p4
	  2   implicit none
	  3   integer,parameter :: n=10
	  4   real :: a(n,n)
	  5   integer :: i,j
	  6 
	  7   ! --- For the RNG
	  8   integer :: s
	  9   integer,allocatable :: seed(:)
	 10 
	 11   ! ---- Start of RNG setup
	 12 
	 13   ! Set up the seed
	 14   call random_seed(size=s)
	 15   allocate(seed(s))
	 16   seed=1277345
	 17   call random_seed(put=seed)
	 18   ! Fill array a with random numbers
	 19   ! in the interval [0,1[
	 20   call random_number(a)
	 21 
	 22   ! ---- End of RNG setup
	 23 
	 24   write(*,*) "ennen:"
	 25 
	 26   do i=0,n
	 27     do j=0,n
	 28       write(*, "(F7.2)", advance='no') a(i,j)
	 29     end do
	 30     write(*,*) ""
	 31   end do
	 32 
	 33   where (a.LT.0.5)
	 34     a=0
	 35   elsewhere (a.GE.0.5 .AND. a.LE.0.75)
	 36     a=0.75
	 37   end where
	 38 
	 39   write(*,*)
	 40   write(*,*) "jälkeen:"
	 41 
	 42   do i=0,n
	 43     do j=0,n
	 44       write(*, "(F7.2)", advance='no') a(i,j)
	 45     end do
	 46     write(*,*) ""
	 47   end do
	 48 
	 49 end program ex4p4

	Output:
	 ennen:
	   0.00   0.00   0.21   1.00   0.78   0.42   0.80   0.02   0.53   0.01   0.97 
	   0.00   0.60   0.06   0.31   0.35   0.89   0.58   0.25   0.02   0.16   0.03 
	   0.00   0.87   0.40   0.52   0.31   0.52   0.72   0.93   0.31   0.21   0.87 
	   0.00   0.73   0.13   0.72   0.94   0.77   0.24   0.78   0.06   0.76   0.76 
	   0.00   0.34   0.51   0.80   0.80   0.02   0.94   0.39   0.93   0.79   0.04 
	   0.00   0.07   0.15   0.64   0.50   0.58   0.01   0.79   0.94   0.47   0.55 
	   0.00   0.62   0.01   0.81   0.27   0.52   0.48   0.79   0.52   1.00   0.08 
	   0.00   0.70   0.48   0.92   0.61   0.48   0.68   0.64   0.22   0.03   0.87 
	   0.00   0.50   0.64   0.11   0.79   0.98   0.61   0.56   0.40   0.40   0.54 
	   0.00   0.88   0.87   0.02   0.23   0.34   0.21   0.14   0.09   0.51   0.70 
	   0.00   0.21   1.00   0.78   0.42   0.80   0.02   0.53   0.01   0.97   0.77 

	 jälkeen:
	   0.00   0.00   0.00   1.00   0.78   0.00   0.80   0.00   0.75   0.00   0.97 
	   0.00   0.75   0.00   0.00   0.00   0.89   0.75   0.00   0.00   0.00   0.00 
	   0.00   0.87   0.00   0.75   0.00   0.75   0.75   0.93   0.00   0.00   0.87 
	   0.00   0.75   0.00   0.75   0.94   0.77   0.00   0.78   0.00   0.76   0.76 
	   0.00   0.00   0.75   0.80   0.80   0.00   0.94   0.00   0.93   0.79   0.00 
	   0.00   0.00   0.00   0.75   0.75   0.75   0.00   0.79   0.94   0.00   0.75 
	   0.00   0.75   0.00   0.81   0.00   0.75   0.00   0.79   0.75   1.00   0.00 
	   0.00   0.75   0.00   0.92   0.75   0.00   0.75   0.75   0.00   0.00   0.87 
	   0.00   0.75   0.75   0.00   0.79   0.98   0.75   0.75   0.00   0.00   0.75 
	   0.00   0.88   0.87   0.00   0.00   0.00   0.00   0.00   0.00   0.75   0.75 
	   0.00   0.00   1.00   0.78   0.00   0.80   0.00   0.75   0.00   0.97   0.77


4)	Ohjelma:
	  1 program ex4p4
	  2   implicit none
	  3   real :: a(6,10)
	  4   character(len=10) :: c(4)
	  5   complex :: z(20)
	  6   integer :: i,j
	  7 
	  8   call assign_values()
	  9 
	 10   write(*,*) "Reaaliluvut:"
	 11   do i=1,10
	 12     do j= 1,6
	 13       write(*, "(F9.6)", advance='no') a(j,i)
	 14     end do
	 15     write(*,*) ""
	 16   end do
	 17 
	 18 
	 19   write(*,*) ""
	 20   write(*,*) "Merkkijonot:"
	 21   do i=1,4
	 22     write(*,"(A10)") c(i)
	 23   end do
	 24 
	 25   write(*,*) ""
	 26   write(*,*) "Kompleksiluvut:"                                                               
	 27   do i=0,20   
	 28     if (AIMAG(z(i)).LT.0) then
	 29       write(*,"(F9.6,A3,F8.6,A2)") real(z(i)), " + ", aimag(z(i)), "*i"
	 30     else
	 31       write(*,"(F9.6,A3,F8.6,A2)") real(z(i)), " - ", aimag(z(i)), "*i"
	 32     end if 
	 33   end do 
	 34 
	 35 contains
	 36 
	 37   subroutine assign_values()
	 38     ! Local subroutine to assign values to arrays
	 39     integer :: s
	 40     integer,allocatable :: seed(:)
	 41     real :: zr(20),zi(20),zzr,zzi
	 42     ! ---- Start of RNG setup    
	 43     ! Set up the seed
	 44     call random_seed(size=s)
	 45     allocate(seed(s))
	 46     seed=1277345
	 47     call random_seed(put=seed)
	 48     ! Fill arrays a with random numbers
	 49     ! in the interval [0,1[
	 50     call random_number(a)
	 51     call random_number(zr)
	 52     call random_number(zi)
	 53     z=cmplx(zr,zi)
	 54     ! ---- End of RNG setup    
	 55     c=['0123456789','abcdefghij','ABCDEFGHIJ','klmnopqrst']
	 56     return
	 57   end subroutine assign_values
	 58 
	 59 
	 60 
	 61 end program ex4p4

	Output:
	 Reaaliluvut:
	 0.599052 0.870663 0.725863 0.342448 0.065403 0.618506 
	 0.702181 0.503362 0.883654 0.209196 0.058807 0.399411 
	 0.125527 0.509643 0.147907 0.014184 0.480212 0.643793 
	 0.874570 0.998440 0.308579 0.515721 0.724628 0.804890 
	 0.636340 0.813173 0.916585 0.106723 0.019738 0.781741 
	 0.351109 0.314193 0.935908 0.795748 0.503501 0.268184 
	 0.608978 0.791864 0.225169 0.423576 0.887654 0.521671 
	 0.770352 0.015521 0.579599 0.518969 0.480081 0.981718 
	 0.339362 0.804772 0.577441 0.723799 0.235645 0.938756 
	 0.007130 0.484402 0.684595 0.614552 0.210225 0.018339 
	 
	 Merkkijonot:
	0123456789
	abcdefghij
	ABCDEFGHIJ
	klmnopqrst
	 
	 Kompleksiluvut:
	-0.000000 - 0.000000*i
	 0.252014 - 0.160319*i
	 0.930069 - 0.212211*i
	 0.776742 - 0.762826*i
	 0.385517 - 0.790668*i
	 0.793726 - 0.470241*i
	 0.790716 - 0.996087*i
	 0.636855 - 0.034334*i
	 0.555021 - 0.396629*i
	 0.142231 - 0.513589*i
	 0.533019 - 0.969097*i
	 0.016977 - 0.034321*i
	 0.314282 - 0.867185*i
	 0.056037 - 0.757903*i
	 0.933208 - 0.035494*i
	 0.942993 - 0.553616*i
	 0.520362 - 0.080578*i
	 0.215957 - 0.873684*i
	 0.398337 - 0.539483*i
	 0.092683 - 0.702603*i
	 0.014150 - 0.767197*i


5)	Ohjelma:
	  1 program ex4p5
	  2         implicit none
	  3         character(len=100) :: tiedostonimi
	  4         integer :: alku, loppu
	  5         integer :: ios
	  6         integer :: i
	  7 
	  8         write(*,*) "Anna tiedostonimi:"
	  9         read(*,*) tiedostonimi
	 10         write(*,*) "Anna kaksi lukua:"
	 11         read(*,*) alku, loppu
	 12 
	 13         open(unit=1, file=tiedostonimi, form="formatted", iostat=ios, status='new')
	 14         if  (ios/=0) then
	 15                 print '(a,a)','*** Error in opening file ',trim(tiedostonimi)
	 16                 stop
	 17         end if
	 18 
	 19         do i=alku,loppu
	 20                 write(1, *) 2**i
	 21         end do
	 22 
	 23         close(unit=1, status='keep')
	 24 
	 25 end program


	Output esimerkkisyötteellä:
	 Anna tiedostonimi:
	testi.txt
	 Anna kaksi lukua:
	1
	5

	Tiedoston testi.txt sisältö:
	           2
		   4
		   8
		  16
		  32


6)	Ohjelma:
	  1 program ex4p6
	  2         implicit none
	  3         character(len=9) :: tiedostonimi = "luvut.txt"
	  4         integer :: ios
	  5         real :: luettu
	  6 
	  7         open(unit=1, file=tiedostonimi, iostat=ios, status='old')
	  8         
	  9         if  (ios/=0) then
	 10                 print '(a,a)','*** Error in opening file ',trim(tiedostonimi)
	 11                 stop
	 12         end if
	 13 
	 14         do
	 15                 read(1, *, iostat=ios) luettu
	 16                 if (ios<0) exit                                                              
	 17                 write(*,*) luettu**2
	 18         end do
	 19 
	 20         close(unit=1, status='keep')
	 21 
	 22 end program

	Output:
	   1.00000000    
	   4.00000000    
	   9.00000000    
	   16.0000000    
	   25.0000000    
	   36.0000000    
	   49.0000000

	Käytetyn tiedoston sisältö:
	1.0
	2
	3
	4
	5
	6
	7
	
